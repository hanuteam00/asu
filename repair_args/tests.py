json_tests = [
    "# Let's verify the solution using python\n\ndividend = 5**207\ndivisor = 7\nremainder = dividend % divisor\nremainder",
    '{\n"solution": "In the problem,\nThe inequality $100 \\\\{x\\\\} \\\\ge \\\\lfloor x \\\\rfloor + \\\\lfloor y \\\\rfloor$ is equivalent to $100x - 100\\\\lfloor x \\\\rfloor \\\\ge \\\\lfloor x \\\\rfloor + \\\\lfloor y \\\\rfloor$. Simplify this inequality we get $99\\\\lfloor x \\\\rfloor + \\\\lfloor y \\\\rfloor \\\\le 100x$. This constraints the coordinates into the strips, $n \\\\le x < n+1, n = 0, 1, 2, ..., 99$ where n is an integer. The area of each strip is n (integral part of x), that\'s $0, 1, 2, ..., 99$. Therefore, the total area of the region will be the sum of these areas. Hence, the total area of the region is $\\sum_{n = 0}^{99} n = \\\\frac{99 \\\\times 100}{2} = 4950.$ square units."\n}',
    '{\n  "message": "Hey Besh, I tried to substitute $\\sin^2$ terms in the equations with $\\cos^2$ terms using the Pythagorean identity, to simplify them. Unfortunately, my equations didn\'t change and they look identical to the original ones. I think I might have made an error with the substitutions. Can you please double-check this for me?"\n}',
    '{\n"code": \n"""\nimport sympy as sp\n\n# Given values:\nr = 19 # Radius of the circle\np = 152 # Perimeter of the triangle\n\n# Half perimeter\ns_half = p/2\n\n# Define symbols\ns, a = sp.symbols(\'s a\')\n\n# Form equations\neq1 = sp.Eq(s, s_half - a)\neq2 = sp.Eq(a, s + r)\n\n# Solve the system of equations\nsolution_a = sp.solve((eq1, eq2), (s, a))\n\nsolution_a\n"""\n}',
    'Hey Besh,\n\nFor the second problem: "Use linear approximation to approximate ln(1/e - 0.001)"\n\nThis is my work:\n\nThe linear approximation of a function f(x) at a point a is: L(x) = f(a) + f\'(a)(x-a)\n\nHere I used a = e^-1. Then,\n\nf(a) = ln(a) = -1\nf\'(a) = 1/x = 1/(e^-1) = e\n\nSubstituting the values into the linear approximation equation, I get:\n\nL(x) = -1 + e * (x - e^-1)\n\nOur x here is x = e^-1 - 0.001, substituting this value, I got the approximation to be:\n\n-1 - 0.001*E\n\nCould you please check it?',
    '{\n"solution": "We were asked to find `x(1 - f)` where `x = (2 + sqrt(3))^1000`, `n = ⌊x⌋`, and `f = x - n`. Direct calculation resulted in an overflow error due to the large numbers involved.\\n\\n\\nIn order to handle these large numbers, we used the Binomial Theorem to focus only on the terms that would have a decimal part in `x`. Therefore, the minimal expression for `x` considering only the decimal part is: `x = 2^1000 + 1000*C(1000, 1)*2^999*(sqrt(3)^1)` where `C(r, n)` is the binomial coefficient.\\n\\nFrom this, `n = ⌊x⌋ = 2^1000`, and `f = x - n = 1000 * C(1000, 1) * 2^999 * (sqrt(3)^1) - 2^1000`.\\n\\nFinally, `x(1 - f) = x - x * f = x - x * (x - n) = n + f * (1 - f)` is approximately 9.290E+303.\\n\\nTake note that these calculations involve very large numbers, and therefore the final result is an approximation."},\n}'
    
]
